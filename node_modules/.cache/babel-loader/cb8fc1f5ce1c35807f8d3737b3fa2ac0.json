{"ast":null,"code":"var _jsxFileName = \"/Users/kiara/Desktop/js/ReactArticles/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"../helpers/Cookies\";\nimport \"../styles/login.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputs: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n    this.setUser = this.setUser.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n    axios.post(\"/login\", this.state.inputs).then(res => {\n      this.props.setUser(res.data);\n    });\n  }\n\n  changeInput(e, input) {\n    const val = e.target.value;\n    this.setState(prev => {\n      prev.inputs[input] = val;\n      return prev;\n    });\n  } // method to initialize our user\n\n\n  initUser() {\n    // get the token from the cookie\n    const token = Cookies.get(\"token\"); // if there is a token\n\n    if (token && token !== \"\") {\n      // send a request to our API to validate the user\n      axios.get(`${this.state.url}/users/validate`, {\n        // include the token as a parameter\n        params: {\n          auth_token: token\n        }\n      }).then(res => {\n        // the response will be the user\n        // set the user in the state, and change the mode to content\n        this.setState({\n          user: res.data,\n          mode: \"content\"\n        });\n      }).catch(err => {\n        // if there is an error\n        Cookies.set(\"token\", \"\"); // take away the cookie\n        // change the state so that there is no user and render the auth\n\n        this.setState({\n          user: false,\n          mode: \"auth\"\n        });\n      });\n    } else {\n      // if there is no token\n      // we should render the auth forms\n      this.setState({\n        mode: \"auth\"\n      });\n    }\n  }\n\n  setUser(user) {\n    // set a cookie with the user's token\n    Cookies.set(\"token\", user.token); // set state to have the user and the mode to content\n\n    this.setState({\n      user: user,\n      mode: \"content\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"email\",\n      name: \"email\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      autoFocus: true,\n      onChange: e => this.changeInput(e, \"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"password\",\n      label: \"Password\",\n      name: \"password\",\n      autoComplete: \"current-password\",\n      onChange: e => this.changeInput(e, \"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/signup\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Don't have an account? Sign Up\")))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/kiara/Desktop/js/ReactArticles/src/components/Login.js"],"names":["React","Component","axios","Cookies","Button","TextField","Link","Grid","Login","constructor","state","inputs","email","password","setUser","bind","login","e","preventDefault","post","then","res","props","data","changeInput","input","val","target","value","setState","prev","initUser","token","get","url","params","auth_token","user","mode","catch","err","set","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"../helpers/Cookies\";\nimport \"../styles/login.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputs: {\n        email: \"\",\n        password: \"\",\n      },\n    };\n    this.setUser = this.setUser.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n\n    axios.post(\"/login\", this.state.inputs).then((res) => {\n      this.props.setUser(res.data);\n    });\n  }\n\n  changeInput(e, input) {\n    const val = e.target.value;\n    this.setState((prev) => {\n      prev.inputs[input] = val;\n      return prev;\n    });\n  }\n\n  // method to initialize our user\n  initUser() {\n    // get the token from the cookie\n    const token = Cookies.get(\"token\");\n\n    // if there is a token\n    if (token && token !== \"\") {\n      // send a request to our API to validate the user\n      axios\n        .get(`${this.state.url}/users/validate`, {\n          // include the token as a parameter\n          params: { auth_token: token },\n        })\n        .then((res) => {\n          // the response will be the user\n          // set the user in the state, and change the mode to content\n          this.setState({ user: res.data, mode: \"content\" });\n        })\n        .catch((err) => {\n          // if there is an error\n          Cookies.set(\"token\", \"\"); // take away the cookie\n          // change the state so that there is no user and render the auth\n          this.setState({ user: false, mode: \"auth\" });\n        });\n    } else {\n      // if there is no token\n      // we should render the auth forms\n      this.setState({ mode: \"auth\" });\n    }\n  }\n\n  setUser(user) {\n    // set a cookie with the user's token\n    Cookies.set(\"token\", user.token);\n    // set state to have the user and the mode to content\n    this.setState({ user: user, mode: \"content\" });\n  }\n\n  render() {\n    return (\n      <form>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"email\"\n              name=\"email\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              autoFocus\n              onChange={(e) => this.changeInput(e, \"email\")}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"password\"\n              label=\"Password\"\n              name=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => this.changeInput(e, \"password\")}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}></Grid>\n\n          <Grid container justify=\"flex-end\">\n            <Button type=\"submit\" variant=\"contained\" color=\"default\">\n              Login\n            </Button>\n          </Grid>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}